apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: "kotlin-allopen"

androidExtensions {
    experimental = true
}

android {
    dataBinding {
        enabled = true
    }

    compileSdkVersion projectCompileVersion
    buildToolsVersion toolsVersion

    defaultConfig {
        applicationId "org.steamzone.shaked"
        minSdkVersion projectMinSdkVersion
        targetSdkVersion projectTargetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        debug {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "LOG_LEVEL", "3"
            debuggable true
        }
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "int", "LOG_LEVEL", "0"
            //signingConfig signingConfigs.release
        }
    }

    sourceSets {

        main {
            aidl.srcDirs = ['src/main/aidl']
//            jniLibs.srcDir new File(buildDir, 'libs')
//            manifest.srcFile 'src/main/AndroidManifest.xml'

            res.srcDir 'res'
            assets.srcDir 'assets'
            main.java.srcDirs += 'src/main/kotlin'
//            jniLibs.srcDir 'src/main/libs'
//            jni.srcDirs = []           //disable automatic ndk-build call
//            jniLibs.srcDirs = ['libs']
        }
        main.java.srcDirs += [file("$buildDir/generated/source/kapt/main")]
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }


}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-reflect:$kotlin_version"

    implementation 'com.google.code.gson:gson:2.8.5'

    implementation "androidx.core:core:$android_x"
    implementation "androidx.dynamicanimation:dynamicanimation:$android_x"
    implementation "androidx.transition:transition:$android_x"
    implementation "androidx.vectordrawable:vectordrawable:$android_x"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:$android_x"
    implementation "androidx.appcompat:appcompat:$android_x"
    implementation "com.google.android.material:material:$android_x"
    implementation "androidx.cardview:cardview:$android_x"
    implementation "androidx.asynclayoutinflater:asynclayoutinflater:$android_x"
    implementation "androidx.coordinatorlayout:coordinatorlayout:$android_x"
    implementation "androidx.gridlayout:gridlayout:$android_x"
    implementation "androidx.recyclerview:recyclerview-selection:$android_x"
    implementation "androidx.recyclerview:recyclerview:$android_x"
    implementation "androidx.annotation:annotation:$android_x"
    implementation "androidx.fragment:fragment:$android_x"
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'
    implementation "com.google.android.material:material:$android_x"

    implementation "androidx.lifecycle:lifecycle-extensions:$arcComponents"
    implementation('androidx.legacy:legacy-support-v4:1.0.0')
            {
                force = true
            }
    implementation "androidx.legacy:legacy-support-v4:$android_x"
    implementation 'androidx.appcompat:appcompat:1.0.0-alpha1'
    kapt "androidx.databinding:databinding-compiler:$dataBinding"

    implementation "androidx.arch.core:core-common:$arcComponents"
    // ViewModel and LiveData
    implementation "androidx.lifecycle:lifecycle-extensions:$arcComponents"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$arcComponents"
    implementation "androidx.lifecycle:lifecycle-common-java8:$arcComponents"

    // optional - ReactiveStreams support for LiveData
    implementation("androidx.lifecycle:lifecycle-reactivestreams-ktx:$arcComponents")
            {
                force = true
            }

    // optional - Test helpers for LiveData
    testImplementation "androidx.arch.core:core-testing:$arcComponents"

    implementation "android.arch.navigation:navigation-fragment-ktx:$nav_version"
    implementation "android.arch.navigation:navigation-ui-ktx:$nav_version"



    implementation group: 'com.squareup.okhttp3', name: 'okhttp', version: '3.11.0'
    implementation group: 'com.squareup.retrofit2', name: 'retrofit', version: '2.4.0'
    implementation group: 'com.squareup.retrofit2', name: 'converter-gson', version: '2.4.0'
    implementation group: 'com.squareup.retrofit2', name: 'adapter-rxjava2', version: '2.4.0'
    implementation group: 'com.squareup.okhttp3', name: 'logging-interceptor', version: '3.11.0'

    implementation 'com.github.bumptech.glide:glide:4.7.1'
    kapt 'com.github.bumptech.glide:compiler:4.8.0'

    //RX Java
    implementation 'io.reactivex:rxandroid:1.2.1'
    implementation 'io.reactivex:rxjava:1.3.0'
    //Rx Java 2
    implementation 'io.reactivex.rxjava2:rxandroid:2.0.1'
    implementation 'io.reactivex.rxjava2:rxjava:2.2.2'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.2.0'

    implementation 'com.trello.rxlifecycle2:rxlifecycle:2.2.2'

// If you want to bind to Android-specific lifecycles
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android:2.2.2'

// If you want pre-written Activities and Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components:2.2.2'

// If you want pre-written support preference Fragments you can subclass as providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-components-preference:2.2.2'

// If you want to use Navi for providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-navi:2.2.2'

// If you want to use Android Lifecycle for providers
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle:2.2.2'

// If you want to use Kotlin syntax
    implementation 'com.trello.rxlifecycle2:rxlifecycle-kotlin:2.2.2'

// If you want to use Kotlin syntax with Android Lifecycle
    implementation 'com.trello.rxlifecycle2:rxlifecycle-android-lifecycle-kotlin:2.2.2'

    implementation 'com.jakewharton.rxrelay2:rxrelay:2.1.0'
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation "io.objectbox:objectbox-kotlin:$objectboxVersion"
    implementation "io.objectbox:objectbox-android-objectbrowser:$objectboxVersion"
    kapt "io.objectbox:objectbox-processor:$objectboxVersion"

    implementation 'com.orhanobut:logger:2.2.0'

    implementation "com.polidea.rxandroidble2:rxandroidble:1.7.1"
    implementation 'me.aflak.libraries:bluetooth:1.3.4'
    implementation 'com.jakewharton.rx2:replaying-share:2.0.1'

    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'

}
apply plugin: "io.objectbox"
